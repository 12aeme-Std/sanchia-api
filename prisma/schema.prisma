generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  accessToken String?
  role        UserRole @default(ADMIN)
}

enum UserRole {
  ADMIN
  SELLER
}

model Client {
  id          Int        @id @default(autoincrement())
  name        String
  email       String     @unique
  password    String
  accessToken String?
  role        ClientRole @default(BUYER)
  cart        Cart[]
  order       Order[]
}

enum ClientRole {
  DISTRIBUTOR
  BUYER
}

model Cart {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  client    Client  @relation(fields: [clientId], references: [id])
  clientId  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String
  price       Float
  stock       Int
  category    Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
  Cart        Cart[]
  orderDetail OrderDetail[]
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]
}

model Order {
  id          Int           @id @default(autoincrement())
  client      Client        @relation(fields: [clientId], references: [id])
  clientId    Int
  total       Float
  orderDetail OrderDetail[]
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}